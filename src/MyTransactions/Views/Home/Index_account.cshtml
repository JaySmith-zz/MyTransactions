@model MyTransactions.Models.TransactionIndexViewModel

@{
    ViewBag.Title = "Index";
}

<h2>@Html.DisplayFor(model => model.Account.Name)</h2>

<div>
    <table class="table">
        <tr>
            <th>
                Cleared
            </th>
            <th>
                Date
            </th>
            <th>
                Number
            </th>
            <th>
                Type
            </th>
            <th>
                Description
            </th>
            <th>
                Memo
            </th>
            <th>
                Amount
            </th>
            <th>
                @Html.DisplayFor(model => model.Account.StartingBalance)
            </th>
        </tr>
        <tr>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.NewTransaction.FinancialAccountId)
                <td>
                    <div class="checkbox">
                        @Html.EditorFor(model => model.NewTransaction.Cleared)
                        @Html.ValidationMessageFor(model => model.NewTransaction.Cleared, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td class="col-xs-2">
                    @Html.EditorFor(model => model.NewTransaction.Date, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td class="col-xs-1">@Html.EditorFor(model => model.NewTransaction.CheckNumber, new { htmlAttributes = new { @class = "form-control", size = "3" } })</td>
                <td style="z-index: 10">@Html.DropDownListFor(model => model.NewTransaction.TransactionType, Model.TransactionTypeSelectListItems, new { @class = "form-control" })</td>
                <td>@Html.EditorFor(model => model.NewTransaction.Description, new { htmlAttributes = new { @class = "form-control" } })</td>
                <td>@Html.EditorFor(model => model.NewTransaction.Memo, new { htmlAttributes = new { @class = "form-control" } })</td>
                <td>@Html.EditorFor(model => model.NewTransaction.Amount, new { htmlAttributes = new { @class = "form-control", size = "1", @style = "text-align: right;" } })</td>
                <td><input type="submit" value="Add" class="btn btn-default" /></td>
            }
        </tr>

        @foreach (var item in Model.Account.Transactions)
        {
            <tr>
                <td>
                    @Html.HiddenFor(modelItem => item.Id)
                    @Html.EditorFor(modelItem => item.Cleared, new { htmlAttributes = new { @class = ".checkAll", itemId = item.Id } })
                </td>
                <td>
                    @item.Date
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Memo)
                </td>
                <td style="text-align: right">
                    $ @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    $ @Html.DisplayFor(modelItem => item.Balance)
                </td>
            </tr>
        }
    </table>
</div>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            var date = new Date();
            var currentDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());

            $('#NewTransaction_Date').datepicker({
                autoclose: true
            });

            $('input[type="checkbox"]').click(function () {

                var transactionId = parseInt($(this).attr('itemId'));
                var isCleared = this.checked;
                var jsonObject = { 'transactionId': transactionId, 'isCleared': isCleared };

                $.ajax({
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    url: '@Url.Action("SetCleared", "Home")',
                    data: JSON.stringify(jsonObject),
                    dataType: 'json',
                    async: true
                });
            });

        });
    </script>
}
